# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.27)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS clingInterpreter clingMetaProcessor clingUserInterface clingUtils libclingJupyter libcling)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Create imported target clingInterpreter
add_library(clingInterpreter STATIC IMPORTED)

set_target_properties(clingInterpreter PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "LLVM_PATH=\"C:/Program Files (x86)/LLVM\""
  INTERFACE_LINK_LIBRARIES "clingUtils;clangCodeGen;clangDriver;clangFrontend;clangParse;clangSema;clangAnalysis;clangEdit;clangRewrite;clangRewriteFrontend;clangSerialization;clangAST;clangBasic;clangLex;LLVMAnalysis;LLVMCore;LLVMCoroutines;LLVMCoverage;LLVMExecutionEngine;LLVMipo;LLVMJITLink;LLVMLTO;LLVMMC;LLVMObject;LLVMOption;LLVMOrcJIT;LLVMRuntimeDyld;LLVMScalarOpts;LLVMSupport;LLVMTarget;LLVMTransformUtils;LLVMBinaryFormat;LLVMNVPTXCodeGen;LLVMNVPTXDesc;LLVMNVPTXInfo;LLVMX86CodeGen;LLVMX86AsmParser;LLVMX86Desc;LLVMX86Disassembler;LLVMX86Info"
)

# Create imported target clingMetaProcessor
add_library(clingMetaProcessor STATIC IMPORTED)

set_target_properties(clingMetaProcessor PROPERTIES
  INTERFACE_LINK_LIBRARIES "clangLex;clangAST;clangBasic;clingInterpreter;clingUtils;LLVMCore;LLVMSupport;LLVMBinaryFormat"
)

# Create imported target clingUserInterface
add_library(clingUserInterface STATIC IMPORTED)

set_target_properties(clingUserInterface PROPERTIES
  INTERFACE_LINK_LIBRARIES "clingMetaProcessor;clingInterpreter;clingUtils;LLVMSupport"
)

# Create imported target clingUtils
add_library(clingUtils STATIC IMPORTED)

set_target_properties(clingUtils PROPERTIES
  INTERFACE_LINK_LIBRARIES "clangCodeGen;clangDriver;clangFrontend;clangParse;clangSema;clangAnalysis;clangEdit;clangRewrite;clangRewriteFrontend;clangSerialization;clangAST;clangBasic;clangLex;LLVMAnalysis;LLVMCore;LLVMCoroutines;LLVMCoverage;LLVMExecutionEngine;LLVMipo;LLVMLTO;LLVMMC;LLVMObject;LLVMOption;LLVMOrcJIT;LLVMRuntimeDyld;LLVMScalarOpts;LLVMSupport;LLVMTarget;LLVMTransformUtils;LLVMBinaryFormat;LLVMNVPTXCodeGen;LLVMNVPTXDesc;LLVMNVPTXInfo;LLVMX86CodeGen;LLVMX86AsmParser;LLVMX86Desc;LLVMX86Disassembler;LLVMX86Info"
)

# Create imported target libclingJupyter
add_library(libclingJupyter SHARED IMPORTED)
set_property(TARGET libclingJupyter PROPERTY ENABLE_EXPORTS 1)

# Create imported target libcling
add_library(libcling SHARED IMPORTED)
set_property(TARGET libcling PROPERTY ENABLE_EXPORTS 1)

# Import target "clingInterpreter" for configuration "Debug"
set_property(TARGET clingInterpreter APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(clingInterpreter PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "D:/Repos/cling/out/build/x64-Debug/lib/clingInterpreter.lib"
  )

# Import target "clingMetaProcessor" for configuration "Debug"
set_property(TARGET clingMetaProcessor APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(clingMetaProcessor PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "D:/Repos/cling/out/build/x64-Debug/lib/clingMetaProcessor.lib"
  )

# Import target "clingUserInterface" for configuration "Debug"
set_property(TARGET clingUserInterface APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(clingUserInterface PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "D:/Repos/cling/out/build/x64-Debug/lib/clingUserInterface.lib"
  )

# Import target "clingUtils" for configuration "Debug"
set_property(TARGET clingUtils APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(clingUtils PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "D:/Repos/cling/out/build/x64-Debug/lib/clingUtils.lib"
  )

# Import target "libclingJupyter" for configuration "Debug"
set_property(TARGET libclingJupyter APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(libclingJupyter PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/Repos/cling/out/build/x64-Debug/lib/libclingJupyter.lib"
  IMPORTED_LOCATION_DEBUG "D:/Repos/cling/out/build/x64-Debug/bin/libclingJupyter.dll"
  )

# Import target "libcling" for configuration "Debug"
set_property(TARGET libcling APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(libcling PROPERTIES
  IMPORTED_IMPLIB_DEBUG "D:/Repos/cling/out/build/x64-Debug/lib/libcling.lib"
  IMPORTED_LOCATION_DEBUG "D:/Repos/cling/out/build/x64-Debug/bin/libcling.dll"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
